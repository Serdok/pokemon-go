swagger: "2.0"
info:
  title: Pokémon Go by Serdok
  description: Endpoints for Pokémon Go by Serdok
  version: 1.0.0

host: serdok-pokemon-go.appspot.com

consumes:
  - application/json
produces:
  - application/json

schemes:
  - https

securityDefinitions:
  'firebase':
    authorizationUrl: ''
    flow: 'implicit'
    type: 'oauth2'
    x-google-issuer: 'https://securetoken.google.com/serdok-pokemon-go'
    x-google-jwks_uri: 'https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com'
    x-google-audiences: 'serdok-pokemon-go'

paths:
  '/echo':
    get:
      description: 'Echo a message from the server'
      operationId: 'echo'

      produces:
        - 'application/json'

      responses:
        200:
          description: 'Success'
          schema:
            type: string

  '/user/{uid}':
    get:
      description: 'Get a user from its uid'
      operationId: 'get-user'
      security:
        - firebase: []

      produces:
        - 'application/json'

      parameters:
        - name: 'uid'
          description: 'A user uid'
          in: 'path'
          required: true
          type: string

      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/UserResponse'
        404:
          description: 'Not found'
          schema:
            $ref: '#/definitions/ErrorResponse'


  '/user/create':
    post:
      description: 'Create a user'
      operationId: 'create-user'
      security:
        - firebase: []

      consumes:
        - 'application/json'
      produces:
        - 'application/json'

      parameters:
        - name: 'user'
          in: 'body'
          schema:
            $ref: '#/definitions/UserParam'

      responses:
        201:
          description: 'Success'
          schema:
            $ref: '#/definitions/UserResponse'
        401:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 'Forbidden'
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  'User':
    type: object
    properties:
      'uid':
        type: string
    required: [ 'uid' ]

  'UserParam':
    type: object
    properties:
      'uid':
        type: string
    required: [ 'uid' ]

  'UserResponse':
    type: object
    properties:
      'user':
        $ref: '#/definitions/User'

  'ErrorResponse':
    type: object
    properties:
      'error':
        type: string
      
